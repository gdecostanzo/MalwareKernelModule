import OpenSSL
import base64


def get_private_key(path):
    with open(path, 'r') as f:
        private_key = OpenSSL.crypto.load_privatekey(OpenSSL.crypto.FILETYPE_PEM, f.read())
    return private_key


def get_public_key(path):
    with open(path, 'r') as f:
        private_key = OpenSSL.crypto.load_certificate(OpenSSL.crypto.FILETYPE_PEM, f.read())
    return private_key


def sign(private_key, data, digest='sha256'):
    signature = OpenSSL.crypto.sign(private_key, data, digest)
    signature_base64 = base64.encodestring(signature)
    return signature_base64


def verify(public_key, signature, data, digest='sha256'):
    signature = base64.b64decode(signature)
    try:
        is_valid = OpenSSL.crypto.verify(public_key, signature, data, digest)
        return is_valid is None
    except OpenSSL.crypto.Error:
        return False
